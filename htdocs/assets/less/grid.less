// Grid system and responsive base

// Clearfix! Can be used as mixin
.cf {
	zoom: 1;
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

.contain {
	margin: 0 auto;
}

.g-row {
	.cf;
}

// All columns
.g-row > [class*='g-'] {
	float: left;
}

// Move columns about
.g-right {
	float: right !important;
}
.g-left {
	float: left;
}
.g-center {
	float: none !important;
	margin-left: auto !important;
	margin-right: auto !important;
	@media screen and (max-width: @bp-medium) {
		width: 100% !important;
	}
}

// Grid for large screens.
@media screen and (min-width: @bp-medium) {

	.contain {
		width: @page-width;
	}

	.g-1-1 {
		width: 100%;
	}

	.g-1-2 {
		width: 50%;
	}

	.g-1-3 {
		width: 33.333%;
	}
	.g-2-3 {
		width: 66.666%;
	}

	.g-1-4 {
		width: 25%;
	}
	.g-3-4 {
		width: 75%;
	}

	.g-1-5 {
		width: 20%;
	}
	.g-2-5 {
		width: 40%;
	}
	.g-3-5 {
		width: 60%;
	}
	.g-4-5 {
		width: 80%;
	}

	.g-1-6 {
		width: 16.666%;
	}
	.g-5-6 {
		width: 83.335%;
	}

	.g-1-8 {
		width: 12.5%;
	}
	.g-3-8 {
		width: 37.5%;
	}
	.g-5-8 {
		width: 62.5%;
	}
	.g-7-8 {
		width: 87.5%;
	}

}

// Guttering for elements INSIDE grid elements
@media screen and (min-width: @bp-medium) {

	.g-row.g-pad > [class*='g-'] {
		padding-right: @gutter-width;
	}
	.g-row.g-pad > [class*='g-']:last-of-type {
		padding-right: 0;
	}

}

// Grid for tiny screens
@media screen and (max-width: @bp-tiny) {

	.contain {
		width: 100%;
	}

}

// Grid for most phones
@media screen 
	and (min-width: @bp-tiny) 
	and (max-width: @bp-medium) {

	.contain {
		width: 90%;
	}

	.g-row > [class*='g-'] {
		width: 100%;
	}

}

@media screen 
	and (min-width: @bp-small)
	and (max-width: @bp-massive) {
	.contain {
		width: @small-page-width;
	}
}

// Debug colours expose grid columns
.g-row.g-debug > [class*='g-'] {
	background: #F9F9F9;
	height: 50px;
	margin: 5px 0;
}
.g-row.g-debug > [class*='g-']:nth-child(even) {
	background: #DADADA;
}

// This type of grid makes it easy to iterate any number of (fixed height) grid "boxes" such as products
.g-grid {

	.g-box {
		float: left;
		padding-right: @gutter-width;
	}

	@media screen and (min-width: @bp-medium) {	
		.g-box {
			width: 33.333%;
		}

		.g-box:nth-child(3n+1) {
			padding: 0 (@gutter-width/2) 0 0;
		}
		.g-box:nth-child(3n+2) {
			padding: 0 (@gutter-width/4);
		}
		.g-box:nth-child(3n+3) {
			padding: 0 0 0(@gutter-width/2);
		}

		&.g-grid-4 {
			.g-box {
				width: 25%;
			}
			.g-box:nth-child(4n+1) {
				padding: 0 (@gutter-width/2) 0 0;
			}
			.g-box:nth-child(4n+2) {
				padding: 0 (@gutter-width/4);
			}
			.g-box:nth-child(4n+3) {
				padding: 0 (@gutter-width/4);
			}
			.g-box:nth-child(4n+4) {
				padding: 0 0 0(@gutter-width/2);
			}
		}

		&.g-grid-2 {
			.g-box {
				width: 50%;
			}
			.g-box:nth-child(2n+1) {
				padding: 0 (@gutter-width/2) 0 0;
			}
			.g-box:nth-child(2n+2) {
				padding: 0 0 0 (@gutter-width/2);
			}
		}
	}
	@media screen and (min-width: @bp-small) and (max-width: @bp-medium) {	
		.g-box {
			width: 50%;
		}

		.g-box:nth-child(2n+2) {
			padding-right: 0;
		}
	}
	@media screen and (max-width: @bp-small) {
		.g-box {
			padding: 0;
			width: 100%;
		}
	}
}